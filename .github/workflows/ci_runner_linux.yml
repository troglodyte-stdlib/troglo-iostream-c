#
# Troglobyte stdlib:
# author: Michael Gene Brockus
# gmail: <michaelbrockus@gmail.com>
#
name: Host Linux CI

#
# We have is configured so that ci_runner_linux only runs
# when source files, build scripts and this CI files is
# changed, we should not just run CI for all changes.
#
on:
  push:
    paths:
      - "**.c"
      - "**.h"
      - "**.txt"
      - "**.build"
  pull_request:
    branches:
      - "main"
      - "next"
    paths:
      - "**.c"
      - "**.h"
      - "**.txt"
      - "**.build"

permissions:
  contents: read

#
# We list all the Linux systems in a nice list so the
# DevOps team can manage them.
# 
jobs:
  #
  # Ubuntu host latest host system target
  #
  host_ubuntu_latest:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: x64
    - name: Install Meson Build
      run: |
          pip install meson ninja scan-build
          sudo apt-get install -y cppcheck gcc
    - name: Setup Troglo Project
      run: |
           scan-build meson setup builddir -Dwith_tests=enabled
    - name: Scan Troglo Project
      run: |
           cppcheck --project=builddir/compile_commands.json
    - name: Compile Troglo Project
      run: |
           scan-build meson compile -C builddir -v
    - name: Test Troglo Project
      run: |
           scan-build meson test -C builddir -v
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: Ubuntu_Meson_Testlog
        path: builddir/meson-logs/testlog.txt

  #
  # Ubuntu host 22.04 host system target
  #
  host_ubuntu_22_04:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: x64
    - name: Install Meson Build
      run: |
          pip install meson ninja scan-build
          sudo apt-get install -y cppcheck gcc
    - name: Setup Troglo Project
      run: |
           scan-build meson setup builddir -Dwith_tests=enabled
    - name: Scan Troglo Project
      run: |
           cppcheck --project=builddir/compile_commands.json
    - name: Compile Troglo Project
      run: |
           scan-build meson compile -C builddir -v
    - name: Test Troglo Project
      run: |
           scan-build meson test -C builddir -v
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: Ubuntu_Meson_Testlog
        path: builddir/meson-logs/testlog.txt

  #
  # Ubuntu host 20.04 host system target
  #
  host_ubuntu_20_04:
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v3
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        architecture: x64
    - name: Install Meson Build
      run: |
          pip install meson ninja scan-build
          sudo apt-get install -y cppcheck gcc
    - name: Setup Troglo Project
      run: |
           scan-build meson setup builddir -Dwith_tests=enabled
    - name: Scan Troglo Project
      run: |
           cppcheck --project=builddir/compile_commands.json
    - name: Compile Troglo Project
      run: |
           scan-build meson compile -C builddir -v
    - name: Test Troglo Project
      run: |
           scan-build meson test -C builddir -v
    - uses: actions/upload-artifact@v3
      if: failure()
      with:
        name: Ubuntu_Meson_Testlog
        path: builddir/meson-logs/testlog.txt


  #
  # ChromeOS latest host system target
  #
  host_chromeos:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: nanasess/setup-chromedriver@v1.1.0
    - run: chromedriver --url-base=/wd/hub &
    - name: Install Meson build
      run: |
        sudo apt-get install --fix-missing python3 python3-pip gcc cppcheck -y &&
        python3 -m pip install meson ninja scan-build
    - name: Setup, Compile, Scan, Tests
      run: |
        scan-build meson setup builddir -Dwith_tests=enabled &&
        scan-build meson compile -C builddir -v &&
        cppcheck --project=builddir/compile_commands.json &&
        scan-build meson test -C builddir -v
